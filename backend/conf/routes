# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
GET           /                                     controllers.HomeController.index
POST          /auth/register                        controllers.SignUpController.submit
POST          /auth/login                           controllers.SignInController.submit
GET           /auth/provider/:provider              controllers.SocialController.authenticate(provider: String)

GET           /userSettings                         controllers.SettingsController.userSettings()
POST          /userSettingsHandle                   controllers.SettingsController.userSettings()
DELETE        /userLogout                           controllers.SettingsController.userLogout()
DELETE        /deleteUser/:userId                   controllers.SettingsController.deleteUser(userId:Long)

POST          /user                                 controllers.UserAccountController.addUserInformation()


GET           /products                             controllers.ProductsController.getProducts
GET           /product/:productId                   controllers.ProductsController.getProduct(productId:Long)
GET           /products/category/:categoryId        controllers.ProductsController.getProductsByCategory(categoryId:Int)

GET           /addproduct                           controllers.ProductsController.addProductForm()
POST          /added-product                        controllers.ProductsController.saveAddedProduct
GET           /update-product/:id                   controllers.ProductsController.updateProductForm(id: Long)
POST          /updated-product                      controllers.ProductsController.saveUpdatedProduct

GET           /deleteproduct/:id                    controllers.ProductsController.deleteForm(id: Long)
POST          /deleteproduct                        controllers.ProductsController.deleteHandle()

GET           /addcategory                          controllers.CategoryController.addCategoryForm()
POST          /added-category                       controllers.CategoryController.saveAddedCategory()

GET           /update-category/:id                  controllers.CategoryController.updateCategoryForm(id: Int)
POST          /updated-category                     controllers.CategoryController.saveUpdatedCategory()
GET           /deletecategory/:id                   controllers.CategoryController.deleteForm(id: Int)
POST          /deletecategory                       controllers.CategoryController.deleteHandle()


GET           /update-about/:id                     controllers.AboutController.updateAboutForm(id: Int)
POST          /updated-about                        controllers.AboutController.saveUpdatedAbout()

GET           /update-contact/:id                   controllers.ContactController.updateContactForm(id: Int)
POST          /updated-contact                      controllers.ContactController.saveUpdateContact()

GET           /addsize                              controllers.ProductsController.addSizeForm()
POST          /added-size                           controllers.ProductsController.saveAddedSize()

GET           /deletesize/:product                  controllers.ProductsController.deleteSizeForm(product: Int)
POST          /deleted-size                         controllers.ProductsController.deleteSizeHandle()


POST          /addproducthandle                     controllers.ProductsController.addProductHandle()
GET           /updateproduct/:productId             controllers.ProductsController.updateProduct(productId: Long)
PUT           /updateproducthandle                  controllers.ProductsController.updateProductHandle()
DELETE        /delete/:productId                    controllers.ProductsController.deleteProduct(productId:Long)
GET           /products/sizes/:productId            controllers.ProductsController.getSizeForProduct(productId:Long)








GET           /basket                               controllers.BasketController.basketForm()
POST          /addToBasket/:productId               controllers.BasketController.addToBasket(productId:Long)
DELETE        /deleteFromBasket/:productId          controllers.BasketController.deleteFromBasket(productId:Long)


GET           /newsletterForm                       controllers.NewsletterController.newsletterForm()
POST          /addToNewsletter/:mail                controllers.NewsletterController.addToNewsletter(mail:String)


POST          /notify/:mail/:productId              controllers.AvailabilityController.notifyAvailability(mail:String, productId:Long)


GET           /categories                           controllers.CategoryController.listOfCategories()
POST          /addCategory/:catName                 controllers.CategoryController.addCategory(catName:String)
DELETE        /deleteCategory/:categoryId           controllers.CategoryController.deleteCategory(categoryId:Int)


GET           /contact                              controllers.ContactController.getContact()
POST          /contact/publish                      controllers.ContactController.sendContactEmail()


GET           /about                                controllers.AboutController.getAbout()


GET           /fav                                 controllers.FavouriteController.getWishlistForUser()
POST          /fav/:productId                        controllers.FavouriteController.addFav(productId:Long)
DELETE        /fav/:productId                        controllers.FavouriteController.deleteFav(productId:Long)


GET           /paymentList                          controllers.PaymentController.listOfPayments()
GET           /payment                              controllers.PaymentController.payment()
POST          /paymentHandle/:paymentId             controllers.PaymentController.paymentHandle(paymentId:Long)
DELETE        /paymentDelete/:paymentId             controllers.PaymentController.deletePayment(paymentId:Long)



# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                         controllers.Assets.versioned(path="/public", file: Asset)




